-- MySQL Script generated by MySQL Workbench
-- lun 19 oct 2015 21:03:13 CDT
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema Control_ventas
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema Control_ventas
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `Control_ventas` DEFAULT CHARACTER SET utf8 COLLATE utf8_general_ci ;
USE `Control_ventas` ;

-- -----------------------------------------------------
-- Table `Control_ventas`.`Provider`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Control_ventas`.`Provider` (
  `idProvider` INT NOT NULL COMMENT '',
  `providerName` VARCHAR(45) NOT NULL COMMENT '',
  `providerAddress` VARCHAR(45) NOT NULL COMMENT '',
  `providerPhone` INT(10) NOT NULL COMMENT '',
  PRIMARY KEY (`idProvider`)  COMMENT '')
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Control_ventas`.`Storage`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Control_ventas`.`Storage` (
  `idStorage` INT NOT NULL AUTO_INCREMENT COMMENT '',
  `addressStorage` VARCHAR(45) NOT NULL COMMENT '',
  `capacityStorage` INT NOT NULL COMMENT '',
  `Provider_idProvider` INT NOT NULL COMMENT '',
  PRIMARY KEY (`idStorage`, `Provider_idProvider`)  COMMENT '',
  INDEX `fk_Storage_Provider1_idx` (`Provider_idProvider` ASC)  COMMENT '',
  CONSTRAINT `fk_Storage_Provider1`
    FOREIGN KEY (`Provider_idProvider`)
    REFERENCES `Control_ventas`.`Provider` (`idProvider`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Control_ventas`.`Inventory`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Control_ventas`.`Inventory` (
  `model` INT NOT NULL AUTO_INCREMENT COMMENT '',
  `brand` VARCHAR(45) NOT NULL COMMENT '',
  `genere` VARCHAR(1) NOT NULL COMMENT '',
  `description` VARCHAR(45) NOT NULL COMMENT '',
  `size` VARCHAR(2) NOT NULL COMMENT '',
  `quantity` INT NOT NULL COMMENT '',
  `buyPrice` FLOAT NOT NULL COMMENT '',
  `sellPrice` FLOAT NOT NULL COMMENT '',
  `Storage_idStorage` INT NOT NULL COMMENT '',
  `Storage_Provider_idProvider` INT NOT NULL COMMENT '',
  PRIMARY KEY (`model`, `Storage_idStorage`, `Storage_Provider_idProvider`)  COMMENT '',
  INDEX `fk_Inventory_Storage1_idx` (`Storage_idStorage` ASC, `Storage_Provider_idProvider` ASC)  COMMENT '',
  CONSTRAINT `fk_Inventory_Storage1`
    FOREIGN KEY (`Storage_idStorage` , `Storage_Provider_idProvider`)
    REFERENCES `Control_ventas`.`Storage` (`idStorage` , `Provider_idProvider`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Control_ventas`.`Branch`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Control_ventas`.`Branch` (
  `idBranch` INT NOT NULL AUTO_INCREMENT COMMENT '',
  `branchName` VARCHAR(45) NOT NULL COMMENT '',
  `branchPhone` INT(10) NOT NULL COMMENT '',
  `branchAddress` VARCHAR(45) NOT NULL COMMENT '',
  PRIMARY KEY (`idBranch`)  COMMENT '')
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Control_ventas`.`Employee`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Control_ventas`.`Employee` (
  `idEmployee` INT NOT NULL AUTO_INCREMENT COMMENT '',
  `employeeName` VARCHAR(45) NOT NULL COMMENT '',
  `employeePaternalSurname` VARCHAR(45) NOT NULL COMMENT '',
  `employeeMaternalSurname` VARCHAR(45) NOT NULL COMMENT '',
  `employeePhone` INT(10) NOT NULL COMMENT '',
  `employeeSalary` FLOAT NOT NULL COMMENT '',
  `Branch_idBranch` INT NOT NULL COMMENT '',
  PRIMARY KEY (`idEmployee`, `Branch_idBranch`)  COMMENT '',
  INDEX `fk_Employee_Branch1_idx` (`Branch_idBranch` ASC)  COMMENT '',
  CONSTRAINT `fk_Employee_Branch1`
    FOREIGN KEY (`Branch_idBranch`)
    REFERENCES `Control_ventas`.`Branch` (`idBranch`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Control_ventas`.`Movement`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Control_ventas`.`Movement` (
  `idMovement` INT NOT NULL AUTO_INCREMENT COMMENT '',
  `movDate` DATE NOT NULL COMMENT '',
  `movTime` TIME NOT NULL COMMENT '',
  `movementType` TINYINT(1) NOT NULL COMMENT '',
  `movMotive` VARCHAR(45) NOT NULL COMMENT '',
  `movementQuantity` INT NOT NULL COMMENT '',
  `Inventory_model` INT NOT NULL COMMENT '',
  PRIMARY KEY (`idMovement`, `Inventory_model`)  COMMENT '',
  INDEX `fk_Movement_Inventory1_idx` (`Inventory_model` ASC)  COMMENT '',
  CONSTRAINT `fk_Movement_Inventory1`
    FOREIGN KEY (`Inventory_model`)
    REFERENCES `Control_ventas`.`Inventory` (`model`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Control_ventas`.`Branch_has_Storage`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Control_ventas`.`Branch_has_Storage` (
  `Branch_idBranch` INT NOT NULL COMMENT '',
  `Storage_idStorage` INT NOT NULL COMMENT '',
  `Storage_Provider_idProvider` INT NOT NULL COMMENT '',
  PRIMARY KEY (`Branch_idBranch`, `Storage_idStorage`, `Storage_Provider_idProvider`)  COMMENT '',
  INDEX `fk_Branch_has_Storage_Storage1_idx` (`Storage_idStorage` ASC, `Storage_Provider_idProvider` ASC)  COMMENT '',
  INDEX `fk_Branch_has_Storage_Branch1_idx` (`Branch_idBranch` ASC)  COMMENT '',
  CONSTRAINT `fk_Branch_has_Storage_Branch1`
    FOREIGN KEY (`Branch_idBranch`)
    REFERENCES `Control_ventas`.`Branch` (`idBranch`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Branch_has_Storage_Storage1`
    FOREIGN KEY (`Storage_idStorage` , `Storage_Provider_idProvider`)
    REFERENCES `Control_ventas`.`Storage` (`idStorage` , `Provider_idProvider`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
USE `Control_ventas`;

DELIMITER $$
USE `Control_ventas`$$
CREATE DEFINER = CURRENT_USER TRIGGER `Control_ventas`.`Movement_AFTER_INSERT` AFTER INSERT ON `Movement` FOR EACH ROW
BEGIN
IF(Movement.movementType = 1) THEN
SET Inventory.quantity = Inventory.quantity+Movement.movementQuantity;
ELSEIF(Movement.movementType = 0) THEN
SET Inventory.quantity = Inventory.quantity-Movement.movementQuantity;
END IF;
END;

$$


DELIMITER ;
