-- MySQL Script generated by MySQL Workbench
-- mi√© 11 nov 2015 21:06:13 CST
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema Control_almacen
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema Control_almacen
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `Control_almacen` DEFAULT CHARACTER SET utf8 COLLATE utf8_general_ci ;
USE `Control_almacen` ;

-- -----------------------------------------------------
-- Table `Control_almacen`.`ciudad`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Control_almacen`.`ciudad` (
  `idCiudad` INT(4) NOT NULL AUTO_INCREMENT,
  `nombreCiudad` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`idCiudad`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Control_almacen`.`usuario`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Control_almacen`.`usuario` (
  `idUsuario` INT(5) NOT NULL AUTO_INCREMENT,
  `nombreUsuario` VARCHAR(45) NOT NULL,
  `apellidoUsuario` VARCHAR(45) NOT NULL,
  `direccionUsuario` VARCHAR(45) NOT NULL,
  `telefono` INT(10) NOT NULL,
  `codigoCiudad` INT(4) NOT NULL,
  `contrasena` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`idUsuario`),
  INDEX `fk_cliente_codCiudad` (`codigoCiudad` ASC),
  CONSTRAINT `fk_cliente_codCiudad`
    FOREIGN KEY (`codigoCiudad`)
    REFERENCES `Control_almacen`.`ciudad` (`idCiudad`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Control_almacen`.`proovedor`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Control_almacen`.`proovedor` (
  `idProovedor` INT(5) NOT NULL AUTO_INCREMENT,
  `nombreProovedor` VARCHAR(45) NOT NULL,
  `apellidoProovedor` VARCHAR(45) NOT NULL,
  `nombreComercial` VARCHAR(45) NOT NULL,
  `direccionProovedor` VARCHAR(45) NULL,
  `telefono` INT(10) NULL,
  `codigoCiudad` INT(4) NOT NULL,
  PRIMARY KEY (`idProovedor`),
  INDEX `fk_proovedor_codCiudad` (`codigoCiudad` ASC),
  CONSTRAINT `fk_proovedor_codCiudad`
    FOREIGN KEY (`codigoCiudad`)
    REFERENCES `Control_almacen`.`ciudad` (`idCiudad`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Control_almacen`.`tipo_articulo`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Control_almacen`.`tipo_articulo` (
  `idTipoArticulo` INT(4) NOT NULL AUTO_INCREMENT,
  `tipo` VARCHAR(45) NULL,
  PRIMARY KEY (`idTipoArticulo`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Control_almacen`.`articulo`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Control_almacen`.`articulo` (
  `idArticulo` INT(6) NOT NULL AUTO_INCREMENT,
  `descripcion` VARCHAR(45) NOT NULL,
  `precioCompra` DECIMAL(10,0) NOT NULL,
  `codigoTipoArticulo` INT(4) NOT NULL,
  `codigoProovedor` INT(5) NOT NULL,
  `no_Tamano` VARCHAR(10) NOT NULL,
  `marca` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`idArticulo`),
  INDEX `fk_articulo_tipo_articulo1_idx` (`codigoTipoArticulo` ASC),
  INDEX `fk_articulo_proovedor1_idx` (`codigoProovedor` ASC),
  CONSTRAINT `fk_codTipoArticulo`
    FOREIGN KEY (`codigoTipoArticulo`)
    REFERENCES `Control_almacen`.`tipo_articulo` (`idTipoArticulo`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_codProovedor`
    FOREIGN KEY (`codigoProovedor`)
    REFERENCES `Control_almacen`.`proovedor` (`idProovedor`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Control_almacen`.`entradas_salidas`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Control_almacen`.`entradas_salidas` (
  `idES` INT(15) NOT NULL AUTO_INCREMENT,
  `codArticulo` INT(6) NOT NULL,
  `fecha` DATE NOT NULL,
  `hora` TIME NOT NULL,
  `mov_entrada_salida` TINYINT(1) NOT NULL,
  `cantidad` INT(4) NOT NULL,
  `codUsuario` INT(5) NOT NULL,
  PRIMARY KEY (`idES`, `codArticulo`, `codUsuario`),
  INDEX `fk_idArticulo` (`codArticulo` ASC),
  INDEX `fk_entradas_salidas_usuario1_idx` (`codUsuario` ASC),
  CONSTRAINT `fk_idArticulo`
    FOREIGN KEY (`codArticulo`)
    REFERENCES `Control_almacen`.`articulo` (`idArticulo`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_entradas_salidas_usuario1`
    FOREIGN KEY (`codUsuario`)
    REFERENCES `Control_almacen`.`usuario` (`idUsuario`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Control_almacen`.`inventario`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Control_almacen`.`inventario` (
  `codArticulo` INT(6) NOT NULL,
  `existencia` INT(6) NOT NULL,
  `stockMinimo` INT(4) NOT NULL,
  PRIMARY KEY (`codArticulo`),
  CONSTRAINT `fk_codArticuloInv`
    FOREIGN KEY (`codArticulo`)
    REFERENCES `Control_almacen`.`articulo` (`idArticulo`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

USE `Control_almacen` ;

-- -----------------------------------------------------
-- Placeholder table for view `Control_almacen`.`view1`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Control_almacen`.`view1` (`id` INT);

-- -----------------------------------------------------
-- View `Control_almacen`.`view1`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `Control_almacen`.`view1`;
USE `Control_almacen`;

USE `Control_almacen`;

DELIMITER $$
USE `Control_almacen`$$
$$

USE `Control_almacen`$$
CREATE DEFINER = CURRENT_USER TRIGGER `Control_almacen`.`entradas_salidas_BEFORE_INSERT` BEFORE INSERT ON `entradas_salidas` FOR EACH ROW
BEGIN 
SET NEW.fecha = CURDATE();
SET NEW.hora  = CURTIME();

END    $$


DELIMITER ;

SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
